[2020-07-30 02:01:40,118] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-07-30 02:03:05,980] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-30 02:03:06,084] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-07-30 02:03:06,090] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-07-30 02:03:06,106] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-07-30 02:03:06,120] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-07-30 02:03:06,124] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-07-30 02:03:06,202] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-07-30 02:03:06,213] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-30 02:03:06,235] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-07-30 02:03:06,265] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-07-30 02:03:06,265] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-07-30 02:03:06,265] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-07-30 02:03:06,275] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-07-30 02:03:06,285] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-07-30 02:03:06,285] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-07-30 02:03:06,285] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-07-30 02:03:06,285] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-07-30 02:03:06,290] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-07-30 02:03:06,330] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-07-30 02:03:06,356] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 02:03:06,356] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 02:03:06,367] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 02:03:06,367] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 02:03:06,367] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 02:03:06,370] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 02:03:06,380] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 02:03:06,380] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-EHI6LIC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 02:03:06,383] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-07-30 02:03:06,414] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 02:03:06,414] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 02:03:06,414] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-07-30 02:03:06,414] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-07-30 02:03:06,422] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-07-30 02:03:06,463] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-07-30 02:03:11,467] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:03:11,468] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:08:00,558] INFO [Controller id=0] New topics: [Set(TestTopic)], deleted topics: [Set()], new partition replica assignment [Map(TestTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 02:08:00,559] INFO [Controller id=0] New partition creation callback for TestTopic-0 (kafka.controller.KafkaController)
[2020-07-30 02:08:11,474] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:08:11,474] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:08:11,475] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 02:08:11,479] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:08:56,035] INFO [Controller id=0] New topics: [Set(NewTopic)], deleted topics: [Set()], new partition replica assignment [Map(NewTopic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 02:08:56,035] INFO [Controller id=0] New partition creation callback for NewTopic-0 (kafka.controller.KafkaController)
[2020-07-30 02:13:11,484] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:13:11,484] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:13:11,484] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 02:13:11,484] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:18:11,487] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:18:11,487] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:18:11,487] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 02:18:11,487] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:21:30,044] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 02:21:30,045] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-07-30 02:21:30,291] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-EHI6LIC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 02:23:11,489] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:23:11,491] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:23:11,498] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:23:11,498] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:28:11,498] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:28:11,498] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:28:11,501] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:28:11,501] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:33:11,503] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:33:11,503] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:33:11,507] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:33:11,507] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:38:11,508] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:38:11,508] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:38:11,509] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:38:11,509] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:43:11,510] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:43:11,510] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:43:11,510] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:43:11,510] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:48:11,516] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:48:11,517] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:48:11,521] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:48:11,522] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:53:11,524] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:53:11,524] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:53:11,527] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:53:11,528] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 02:58:11,528] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 02:58:11,528] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 02:58:11,530] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 02:58:11,531] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:03:11,533] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:03:11,535] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:03:11,536] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:03:11,536] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:08:11,536] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:08:11,536] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:08:11,538] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:08:11,538] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:13:11,540] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:13:11,540] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:13:11,541] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:13:11,541] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:18:11,542] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:18:11,542] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:18:11,543] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:18:11,543] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:23:11,544] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:23:11,544] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:23:11,544] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:23:11,545] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:28:11,546] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:28:11,546] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:28:11,547] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:28:11,547] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:33:11,549] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:33:11,549] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:33:11,550] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:33:11,550] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:38:58,709] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-07-30 03:38:58,710] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-30 03:38:58,716] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 03:38:58,717] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 03:38:58,718] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-07-30 03:38:58,720] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-07-30 03:38:58,729] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-07-30 03:38:58,742] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-07-30 03:38:58,873] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-07-30 03:38:58,873] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-07-30 03:38:58,876] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-07-30 03:38:58,877] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-07-30 03:38:58,878] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-07-30 03:38:58,882] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 153) (kafka.controller.KafkaController)
[2020-07-30 03:38:58,889] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-30 03:38:58,919] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-07-30 03:38:58,934] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-07-30 03:38:58,934] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-07-30 03:38:58,934] INFO [Controller id=0] Current list of topics in the cluster: Set(TestTopic, NewTopic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-07-30 03:38:58,934] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-07-30 03:38:58,952] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-07-30 03:38:58,952] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-07-30 03:38:58,952] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-07-30 03:38:58,952] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-07-30 03:38:58,953] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-07-30 03:38:58,955] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 03:38:58,958] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 03:38:58,984] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-07-30 03:38:58,987] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-EHI6LIC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 03:38:59,061] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 03:38:59,062] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=NewTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=TestTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 03:38:59,062] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 03:38:59,063] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 03:38:59,064] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, NewTopic-0 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, TestTopic-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 03:38:59,064] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-07-30 03:38:59,068] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 03:38:59,068] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 03:38:59,069] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-07-30 03:38:59,069] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-07-30 03:38:59,069] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-07-30 03:38:59,074] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-07-30 03:39:04,076] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:39:04,076] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:39:04,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:39:04,077] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:44:04,079] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:44:04,079] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:44:04,080] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:44:04,080] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:49:04,082] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:49:04,082] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:49:04,084] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:49:04,084] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:54:04,086] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:54:04,086] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:54:04,088] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:54:04,088] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 03:59:04,090] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 03:59:04,090] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 03:59:04,090] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 03:59:04,090] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:04:04,091] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:04:04,093] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:04:04,093] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:04:04,094] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:09:04,096] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:09:04,096] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:09:04,096] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:09:04,096] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:14:04,098] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:14:04,098] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:14:04,099] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:14:04,099] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:19:04,101] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:19:04,101] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:19:04,101] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:19:04,101] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:24:04,103] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:24:04,103] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:24:04,105] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:24:04,105] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:29:04,106] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:29:04,106] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:29:04,107] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:29:04,107] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:34:04,108] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:34:04,108] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:34:04,108] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:34:04,109] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:38:16,231] INFO [Controller id=0] New topics: [Set(kafka_example)], deleted topics: [Set()], new partition replica assignment [Map(kafka_example-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 04:38:16,233] INFO [Controller id=0] New partition creation callback for kafka_example-0 (kafka.controller.KafkaController)
[2020-07-30 04:38:16,364] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-EHI6LIC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 04:39:04,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:39:04,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:39:04,117] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:39:04,117] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:44:04,119] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:44:04,119] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:44:04,120] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:44:04,120] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:49:04,122] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:49:04,122] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:49:04,123] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:49:04,123] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:54:04,125] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:54:04,125] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:54:04,127] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:54:04,127] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 04:59:04,128] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 04:59:04,128] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 04:59:04,129] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 04:59:04,129] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:04:04,129] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:04:04,131] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:04:04,132] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:04:04,132] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:09:04,134] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:09:04,135] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:09:04,136] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:09:04,136] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:14:04,138] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:14:04,138] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:14:04,139] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:14:04,139] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:19:04,141] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:19:04,141] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:19:04,142] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:19:04,142] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:24:04,157] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:24:04,159] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:24:04,187] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:24:04,190] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:29:04,192] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:29:04,192] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:29:04,193] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:29:04,193] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:34:04,195] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:34:04,195] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:34:04,197] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:34:04,197] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:39:04,201] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:39:04,202] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:39:04,205] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:39:04,206] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:44:04,208] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:44:04,209] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:44:04,213] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:44:04,213] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:49:04,226] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:49:04,227] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:49:04,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:49:04,228] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:54:04,234] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:54:04,234] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:54:04,240] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:54:04,241] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 05:59:04,244] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 05:59:04,244] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 05:59:04,245] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 05:59:04,245] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:04:04,247] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:04:04,252] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:04:04,253] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:04:04,253] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:09:04,254] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:09:04,254] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:09:04,263] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:09:04,264] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:14:04,265] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:14:04,265] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:14:04,268] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:14:04,268] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:19:04,270] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:19:04,270] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:19:04,271] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:19:04,271] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:24:04,272] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:24:04,272] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:24:04,273] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:24:04,273] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:29:04,275] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:29:04,275] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:29:04,275] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:29:04,275] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:34:04,355] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:34:04,359] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:34:04,436] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:34:04,458] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:39:04,462] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:39:04,463] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:39:04,476] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:39:04,477] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:44:04,482] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:44:04,483] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:44:04,488] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:44:04,489] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:49:04,490] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:49:04,491] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:49:04,494] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:49:04,494] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:54:04,505] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:54:04,506] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:54:04,513] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:54:04,513] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 06:59:04,515] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 06:59:04,516] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 06:59:04,520] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 06:59:04,521] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:04:04,528] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:04:04,542] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:04:04,547] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:04:04,548] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:09:04,552] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:09:04,553] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:09:04,557] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:09:04,558] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:14:04,561] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:14:04,561] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:14:04,567] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:14:04,567] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:19:04,580] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:19:04,583] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:19:04,609] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:19:04,611] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:24:04,613] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:24:04,613] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:24:04,617] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:24:04,618] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:29:04,619] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:29:04,619] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:29:04,621] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:29:04,621] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:34:04,631] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:34:04,632] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:34:04,658] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:34:04,660] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:39:04,801] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:39:04,802] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:39:04,814] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:39:04,815] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:44:04,825] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:44:04,826] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:44:04,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:44:04,837] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:49:04,838] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:49:04,840] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:49:04,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:49:04,844] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:54:04,846] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:54:04,846] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:54:04,848] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:54:04,848] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 07:59:04,851] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 07:59:04,851] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 07:59:04,854] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 07:59:04,854] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:04:04,869] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:04:04,880] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:04:04,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:04:04,892] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:09:04,897] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:09:04,898] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:09:04,904] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:09:04,905] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:14:04,921] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:14:04,922] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:14:04,939] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:14:04,941] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:19:04,943] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:19:04,943] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:19:04,945] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:19:04,946] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:24:11,667] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-07-30 08:24:48,330] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-07-30 08:24:48,387] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-07-30 08:24:48,388] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-07-30 08:24:48,410] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-07-30 08:24:48,418] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-07-30 08:24:48,426] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-07-30 08:24:48,442] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 181) (kafka.controller.KafkaController)
[2020-07-30 08:24:48,471] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-30 08:24:48,574] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-07-30 08:24:48,621] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-07-30 08:24:48,622] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-07-30 08:24:48,623] INFO [Controller id=0] Current list of topics in the cluster: Set(TestTopic, NewTopic, __consumer_offsets, kafka_example) (kafka.controller.KafkaController)
[2020-07-30 08:24:48,624] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-07-30 08:24:48,638] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-07-30 08:24:48,639] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-07-30 08:24:48,639] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-07-30 08:24:48,640] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-07-30 08:24:48,641] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-07-30 08:24:48,659] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-07-30 08:24:48,675] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:24:48,690] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:24:48,691] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-EHI6LIC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 08:24:48,864] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:24:48,865] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=NewTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=TestTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=kafka_example,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:24:48,868] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 08:24:48,880] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 08:24:48,884] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, NewTopic-0 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, kafka_example-0 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, TestTopic-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 08:24:48,884] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-07-30 08:24:48,897] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 08:24:48,897] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 08:24:48,898] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-07-30 08:24:48,899] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-07-30 08:24:48,901] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-07-30 08:24:48,945] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-07-30 08:24:54,020] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:24:54,021] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:24:54,099] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:24:54,103] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:25:49,646] INFO [Controller id=0] New topics: [HashSet(kafka_template)], deleted topics: [Set()], new partition replica assignment [Map(kafka_template-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 08:25:49,647] INFO [Controller id=0] New partition creation callback for kafka_template-0 (kafka.controller.KafkaController)
[2020-07-30 08:29:54,104] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:29:54,105] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:29:54,109] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:29:54,109] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:34:54,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:34:54,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:34:54,114] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:34:54,115] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:39:54,116] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:39:54,116] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:39:54,121] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:39:54,121] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:51:24,979] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-07-30 08:51:24,980] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-30 08:51:24,984] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 08:51:24,986] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:51:24,987] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-07-30 08:51:24,988] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-07-30 08:51:24,988] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-07-30 08:51:24,995] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-07-30 08:51:25,750] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-07-30 08:51:25,750] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-07-30 08:51:25,754] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-07-30 08:51:25,757] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-07-30 08:51:25,759] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-07-30 08:51:25,764] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 193) (kafka.controller.KafkaController)
[2020-07-30 08:51:25,782] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-07-30 08:51:25,812] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-07-30 08:51:25,819] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-07-30 08:51:25,820] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-07-30 08:51:25,820] INFO [Controller id=0] Current list of topics in the cluster: HashSet(kafka_template, NewTopic, __consumer_offsets, kafka_example, TestTopic) (kafka.controller.KafkaController)
[2020-07-30 08:51:25,820] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-07-30 08:51:26,026] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-07-30 08:51:26,026] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-07-30 08:51:26,026] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-07-30 08:51:26,026] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-07-30 08:51:26,026] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-07-30 08:51:26,026] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-07-30 08:51:26,028] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:51:26,031] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:51:26,042] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-EHI6LIC:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 08:51:26,057] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:51:26,058] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=kafka_template,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=NewTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=TestTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=kafka_example,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-07-30 08:51:26,058] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 08:51:26,059] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 08:51:26,059] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, NewTopic-0 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, kafka_example-0 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, kafka_template-0 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, TestTopic-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-07-30 08:51:26,059] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-07-30 08:51:26,064] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 08:51:26,064] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-07-30 08:51:26,065] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-07-30 08:51:26,065] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-07-30 08:51:26,065] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-07-30 08:51:26,070] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-07-30 08:51:31,075] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:51:31,075] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:51:31,081] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:51:31,081] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 08:56:31,082] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 08:56:31,082] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 08:56:31,085] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 08:56:31,085] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 09:01:31,087] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 09:01:31,097] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 09:01:31,101] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2020-07-30 09:01:31,101] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
